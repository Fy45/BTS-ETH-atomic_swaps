var cov_1g3de02sva=function(){var path="/Users/fanyuan/KTH-ICT-TCOMM/Thesis/Analysis/BTS-ETH-atomic_swaps/src/bts.js";var hash="158b70d0a9cefb11edd6ca412e112b6500967666";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/fanyuan/KTH-ICT-TCOMM/Thesis/Analysis/BTS-ETH-atomic_swaps/src/bts.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:43}},"1":{start:{line:2,column:27},end:{line:2,column:68}},"2":{start:{line:3,column:19},end:{line:3,column:52}},"3":{start:{line:4,column:19},end:{line:4,column:52}},"4":{start:{line:5,column:19},end:{line:5,column:52}},"5":{start:{line:6,column:13},end:{line:6,column:40}},"6":{start:{line:17,column:25},end:{line:17,column:46}},"7":{start:{line:18,column:15},end:{line:18,column:68}},"8":{start:{line:19,column:12},end:{line:19,column:40}},"9":{start:{line:20,column:15},end:{line:20,column:68}},"10":{start:{line:21,column:12},end:{line:21,column:40}},"11":{start:{line:22,column:0},end:{line:26,column:4}},"12":{start:{line:24,column:2},end:{line:24,column:66}},"13":{start:{line:25,column:2},end:{line:25,column:32}},"14":{start:{line:38,column:19},end:{line:38,column:25}},"15":{start:{line:39,column:17},end:{line:39,column:26}},"16":{start:{line:41,column:17},end:{line:41,column:35}},"17":{start:{line:42,column:12},end:{line:42,column:16}},"18":{start:{line:44,column:1},end:{line:92,column:4}},"19":{start:{line:49,column:33},end:{line:49,column:36}},"20":{start:{line:51,column:11},end:{line:51,column:35}},"21":{start:{line:53,column:22},end:{line:53,column:28}},"22":{start:{line:54,column:33},end:{line:54,column:37}},"23":{start:{line:56,column:22},end:{line:70,column:3}},"24":{start:{line:72,column:2},end:{line:72,column:54}},"25":{start:{line:74,column:2},end:{line:91,column:5}},"26":{start:{line:76,column:3},end:{line:76,column:65}},"27":{start:{line:78,column:3},end:{line:90,column:7}},"28":{start:{line:82,column:5},end:{line:83,column:60}},"29":{start:{line:84,column:24},end:{line:84,column:58}},"30":{start:{line:85,column:19},end:{line:85,column:34}},"31":{start:{line:86,column:5},end:{line:86,column:19}},"32":{start:{line:89,column:5},end:{line:89,column:26}},"33":{start:{line:98,column:10},end:{line:98,column:17}},"34":{start:{line:100,column:1},end:{line:121,column:4}},"35":{start:{line:104,column:14},end:{line:104,column:48}},"36":{start:{line:105,column:17},end:{line:105,column:26}},"37":{start:{line:106,column:24},end:{line:106,column:44}},"38":{start:{line:107,column:22},end:{line:107,column:40}},"39":{start:{line:108,column:17},end:{line:108,column:39}},"40":{start:{line:109,column:15},end:{line:109,column:66}},"41":{start:{line:110,column:20},end:{line:110,column:58}},"42":{start:{line:113,column:2},end:{line:113,column:60}},"43":{start:{line:114,column:2},end:{line:114,column:58}},"44":{start:{line:115,column:2},end:{line:115,column:57}},"45":{start:{line:116,column:2},end:{line:116,column:51}},"46":{start:{line:117,column:2},end:{line:117,column:56}},"47":{start:{line:119,column:2},end:{line:119,column:13}},"48":{start:{line:130,column:17},end:{line:130,column:26}},"49":{start:{line:131,column:1},end:{line:173,column:4}},"50":{start:{line:134,column:20},end:{line:134,column:23}},"51":{start:{line:136,column:11},end:{line:136,column:35}},"52":{start:{line:138,column:22},end:{line:138,column:28}},"53":{start:{line:140,column:22},end:{line:150,column:3}},"54":{start:{line:153,column:2},end:{line:153,column:54}},"55":{start:{line:155,column:2},end:{line:171,column:5}},"56":{start:{line:157,column:3},end:{line:157,column:65}},"57":{start:{line:160,column:3},end:{line:170,column:7}},"58":{start:{line:163,column:19},end:{line:163,column:66}},"59":{start:{line:164,column:5},end:{line:164,column:29}},"60":{start:{line:165,column:5},end:{line:165,column:115}},"61":{start:{line:169,column:5},end:{line:169,column:24}},"62":{start:{line:183,column:19},end:{line:183,column:25}},"63":{start:{line:185,column:1},end:{line:225,column:4}},"64":{start:{line:188,column:22},end:{line:188,column:25}},"65":{start:{line:190,column:11},end:{line:190,column:35}},"66":{start:{line:191,column:16},end:{line:191,column:18}},"67":{start:{line:192,column:20},end:{line:192,column:37}},"68":{start:{line:194,column:22},end:{line:203,column:3}},"69":{start:{line:206,column:2},end:{line:206,column:54}},"70":{start:{line:208,column:2},end:{line:224,column:5}},"71":{start:{line:209,column:3},end:{line:209,column:65}},"72":{start:{line:213,column:3},end:{line:222,column:7}},"73":{start:{line:216,column:19},end:{line:216,column:43}},"74":{start:{line:217,column:5},end:{line:217,column:111}},"75":{start:{line:221,column:5},end:{line:221,column:24}},"76":{start:{line:230,column:0},end:{line:235,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:1},end:{line:23,column:2}},loc:{start:{line:23,column:8},end:{line:26,column:2}},line:23},"1":{name:"deployHTLC",decl:{start:{line:36,column:15},end:{line:36,column:25}},loc:{start:{line:36,column:77},end:{line:93,column:1}},line:36},"2":{name:"(anonymous_2)",decl:{start:{line:47,column:9},end:{line:47,column:10}},loc:{start:{line:47,column:16},end:{line:92,column:2}},line:47},"3":{name:"(anonymous_3)",decl:{start:{line:74,column:37},end:{line:74,column:38}},loc:{start:{line:74,column:43},end:{line:91,column:3}},line:74},"4":{name:"(anonymous_4)",decl:{start:{line:81,column:10},end:{line:81,column:11}},loc:{start:{line:81,column:20},end:{line:87,column:5}},line:81},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:11},end:{line:88,column:12}},loc:{start:{line:88,column:20},end:{line:90,column:5}},line:88},"6":{name:"verifyHTLC",decl:{start:{line:96,column:15},end:{line:96,column:25}},loc:{start:{line:96,column:35},end:{line:124,column:1}},line:96},"7":{name:"(anonymous_7)",decl:{start:{line:102,column:9},end:{line:102,column:10}},loc:{start:{line:102,column:19},end:{line:121,column:2}},line:102},"8":{name:"resolveHTLC",decl:{start:{line:128,column:15},end:{line:128,column:26}},loc:{start:{line:128,column:54},end:{line:174,column:1}},line:128},"9":{name:"(anonymous_9)",decl:{start:{line:132,column:46},end:{line:132,column:47}},loc:{start:{line:132,column:53},end:{line:173,column:2}},line:132},"10":{name:"(anonymous_10)",decl:{start:{line:155,column:37},end:{line:155,column:38}},loc:{start:{line:155,column:43},end:{line:171,column:3}},line:155},"11":{name:"(anonymous_11)",decl:{start:{line:162,column:10},end:{line:162,column:11}},loc:{start:{line:162,column:20},end:{line:167,column:5}},line:162},"12":{name:"(anonymous_12)",decl:{start:{line:168,column:11},end:{line:168,column:12}},loc:{start:{line:168,column:18},end:{line:170,column:5}},line:168},"13":{name:"extendHTLC",decl:{start:{line:182,column:15},end:{line:182,column:25}},loc:{start:{line:182,column:47},end:{line:226,column:1}},line:182},"14":{name:"(anonymous_14)",decl:{start:{line:187,column:9},end:{line:187,column:10}},loc:{start:{line:187,column:16},end:{line:225,column:2}},line:187},"15":{name:"(anonymous_15)",decl:{start:{line:208,column:37},end:{line:208,column:38}},loc:{start:{line:208,column:43},end:{line:224,column:3}},line:208},"16":{name:"(anonymous_16)",decl:{start:{line:215,column:10},end:{line:215,column:11}},loc:{start:{line:215,column:20},end:{line:219,column:5}},line:215},"17":{name:"(anonymous_17)",decl:{start:{line:220,column:11},end:{line:220,column:12}},loc:{start:{line:220,column:18},end:{line:222,column:5}},line:220}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"158b70d0a9cefb11edd6ca412e112b6500967666"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Apis=(cov_1g3de02sva.s[0]++,require('bitsharesjs-ws').Apis);const TransactionBuilder=(cov_1g3de02sva.s[1]++,require('bitsharesjs').TransactionBuilder);const ChainStore=(cov_1g3de02sva.s[2]++,require('bitsharesjs').ChainStore);const FetchChain=(cov_1g3de02sva.s[3]++,require('bitsharesjs').FetchChain);const PrivateKey=(cov_1g3de02sva.s[4]++,require('bitsharesjs').PrivateKey);const hash=(cov_1g3de02sva.s[5]++,require('bitsharesjs').hash);//const btsForEth = require('./btsForEth') is wrong, we are not allowed to circular dependency
/*
 * Here we need to specify the rpc_endpoint_url since I am using the local private testnet
 * you can change to your own network ws address
 * Keep the both side private key to perform the signature generate
 * could be update to input parameters.
 */const rpc_endpoint_url=(cov_1g3de02sva.s[6]++,"ws://127.0.0.1:8090");var sprivKey=(cov_1g3de02sva.s[7]++,"5Kecd9SoyHEYbSrUnadGzSokptuTWNMKi4M4CgXh7dSNSzLkNLq");let spKey=(cov_1g3de02sva.s[8]++,PrivateKey.fromWif(sprivKey));var rprivKey=(cov_1g3de02sva.s[9]++,"5Hwv9FXXrMd4o3FaHFJRLwuMmsihLz29bAGQYon4arK6ZzXCQhB");let rpKey=(cov_1g3de02sva.s[10]++,PrivateKey.fromWif(rprivKey));cov_1g3de02sva.s[11]++;Apis.instance(rpc_endpoint_url,true).init_promise.then(res=>{cov_1g3de02sva.f[0]++;cov_1g3de02sva.s[12]++;console.log("Successfully connected to BTS local test network.");cov_1g3de02sva.s[13]++;return ChainStore.init(false);});/* 
 * Instance the connection using the api
 * since I use the local private testnet the network_name is not defined
 * script adopted from bitsharesjs/examples/createHtlc.js
 * check your environment before use
 */async function deployHTLC(sender,recipient,Hash,amount,timelock,secret){cov_1g3de02sva.f[1]++;let fromAccount=(cov_1g3de02sva.s[14]++,sender);let toAccount=(cov_1g3de02sva.s[15]++,recipient);let time_lock=(cov_1g3de02sva.s[16]++,parseInt(timelock));let hash=(cov_1g3de02sva.s[17]++,Hash);cov_1g3de02sva.s[18]++;return Promise.all([ChainStore.FetchChain("getAccount",fromAccount),ChainStore.FetchChain("getAccount",toAccount)]).then(res=>{cov_1g3de02sva.f[2]++;let[fromAccount,toAccount]=(cov_1g3de02sva.s[19]++,res);let tr=(cov_1g3de02sva.s[20]++,new TransactionBuilder());let preimageValue=(cov_1g3de02sva.s[21]++,secret);let preimage_hash_calculated=(cov_1g3de02sva.s[22]++,hash);let operationJSON=(cov_1g3de02sva.s[23]++,{from:fromAccount.get("id"),to:toAccount.get("id"),fee:{amount:0,asset_id:"1.3.0"},amount:{amount:amount,asset_id:"1.3.0"},preimage_hash:[2,preimage_hash_calculated],preimage_size:preimageValue.length,claim_period_seconds:time_lock});cov_1g3de02sva.s[24]++;tr.add_type_operation("htlc_create",operationJSON);cov_1g3de02sva.s[25]++;return tr.set_required_fees().then(()=>{cov_1g3de02sva.f[3]++;cov_1g3de02sva.s[26]++;tr.add_signer(spKey,spKey.toPublicKey().toPublicKeyString());cov_1g3de02sva.s[27]++;return tr.broadcast().then(result=>{cov_1g3de02sva.f[4]++;cov_1g3de02sva.s[28]++;console.log("BTS HashTimelockContract was successfully created!");let htlcResponse=(cov_1g3de02sva.s[29]++,result[0].trx.operation_results[0]);let htlc_id=(cov_1g3de02sva.s[30]++,htlcResponse[1]);cov_1g3de02sva.s[31]++;return htlc_id;}).catch(error=>{cov_1g3de02sva.f[5]++;cov_1g3de02sva.s[32]++;console.error(error);});});});};async function verifyHTLC(htlc_id){cov_1g3de02sva.f[6]++;let id=(cov_1g3de02sva.s[33]++,htlc_id);cov_1g3de02sva.s[34]++;return Promise.all([ChainStore.FetchChain("getObject",id)]).then(result=>{cov_1g3de02sva.f[7]++;const res=(cov_1g3de02sva.s[35]++,JSON.parse(JSON.stringify(result)));const htlcId=(cov_1g3de02sva.s[36]++,res[0].id);const fromAccountId=(cov_1g3de02sva.s[37]++,res[0].transfer.from);const toAccountId=(cov_1g3de02sva.s[38]++,res[0].transfer.to);const amount=(cov_1g3de02sva.s[39]++,res[0].transfer.amount);const hash=(cov_1g3de02sva.s[40]++,'0x'+res[0].conditions.hash_lock.preimage_hash[1]);const time_lock=(cov_1g3de02sva.s[41]++,res[0].conditions.time_lock.expiration);cov_1g3de02sva.s[42]++;console.log(`From Account id         | ${fromAccountId}`);cov_1g3de02sva.s[43]++;console.log(`To Account id           | ${toAccountId}`);cov_1g3de02sva.s[44]++;console.log(`Transaction amount      | ${amount} BTS`);cov_1g3de02sva.s[45]++;console.log(`Hash value              | ${hash}`);cov_1g3de02sva.s[46]++;console.log(`Expiration time         | ${time_lock}`);cov_1g3de02sva.s[47]++;return hash;});}async function resolveHTLC(Htlcid,Recipient,secret){cov_1g3de02sva.f[8]++;let toAccount=(cov_1g3de02sva.s[48]++,Recipient);cov_1g3de02sva.s[49]++;return Promise.all([FetchChain("getAccount",toAccount)]).then(res=>{cov_1g3de02sva.f[9]++;let[toAccount]=(cov_1g3de02sva.s[50]++,res);let tr=(cov_1g3de02sva.s[51]++,new TransactionBuilder());let preimageValue=(cov_1g3de02sva.s[52]++,secret);let operationJSON=(cov_1g3de02sva.s[53]++,{preimage:new Buffer.from(preimageValue).toString("hex"),fee:{amount:0,asset_id:"1.3.0"},htlc_id:Htlcid,redeemer:toAccount.get("id"),extensions:null});cov_1g3de02sva.s[54]++;tr.add_type_operation("htlc_redeem",operationJSON);cov_1g3de02sva.s[55]++;return tr.set_required_fees().then(()=>{cov_1g3de02sva.f[10]++;cov_1g3de02sva.s[56]++;tr.add_signer(rpKey,rpKey.toPublicKey().toPublicKeyString());cov_1g3de02sva.s[57]++;return tr.broadcast().then(result=>{cov_1g3de02sva.f[11]++;let balance=(cov_1g3de02sva.s[58]++,ChainStore.getAccountBalance(toAccount,"1.3.0"));cov_1g3de02sva.s[59]++;balance=balance/100000;cov_1g3de02sva.s[60]++;return`BTS HashTimelockContract was successfully redeemed at : ${Date()} \nAccount Balance is ${balance} BTS`;}).catch(err=>{cov_1g3de02sva.f[12]++;cov_1g3de02sva.s[61]++;console.error(err);});});});};/*
 * Bitshares blockchain doesn't provide refund function
 * but allows sender to extend the contract expiration time as he/she wants
 * Taking transactionBuilder test code function as example
 */async function extendHTLC(sender,id,seconds){cov_1g3de02sva.f[13]++;let fromAccount=(cov_1g3de02sva.s[62]++,sender);cov_1g3de02sva.s[63]++;return Promise.all([FetchChain("getAccount",fromAccount)]).then(res=>{cov_1g3de02sva.f[14]++;let[fromAccount]=(cov_1g3de02sva.s[64]++,res);let tr=(cov_1g3de02sva.s[65]++,new TransactionBuilder());let Htlc_id=(cov_1g3de02sva.s[66]++,id);let extend_time=(cov_1g3de02sva.s[67]++,parseInt(seconds));let operationJSON=(cov_1g3de02sva.s[68]++,{fee:{amount:0,asset_id:"1.3.0"},htlc_id:Htlc_id,update_issuer:fromAccount.get("id"),seconds_to_add:extend_time,extensions:null});cov_1g3de02sva.s[69]++;tr.add_type_operation("htlc_extend",operationJSON);cov_1g3de02sva.s[70]++;return tr.set_required_fees().then(()=>{cov_1g3de02sva.f[15]++;cov_1g3de02sva.s[71]++;tr.add_signer(spKey,spKey.toPublicKey().toPublicKeyString());cov_1g3de02sva.s[72]++;return tr.broadcast().then(result=>{cov_1g3de02sva.f[16]++;const reply=(cov_1g3de02sva.s[73]++,result[0].trx.expiration);cov_1g3de02sva.s[74]++;return"BTS HashTimelockContract was successfully extended! \nPlease redeem the contract before: "+reply;}).catch(err=>{cov_1g3de02sva.f[17]++;cov_1g3de02sva.s[75]++;console.error(err);});});});};cov_1g3de02sva.s[76]++;module.exports={deployHTLC,verifyHTLC,resolveHTLC,extendHTLC};