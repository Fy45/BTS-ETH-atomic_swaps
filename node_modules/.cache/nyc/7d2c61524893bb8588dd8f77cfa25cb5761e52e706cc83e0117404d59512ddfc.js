var cov_10395tdp4a=function(){var path="/Users/fanyuan/KTH-ICT-TCOMM/Thesis/Analysis/BTS-ETH-atomic_swaps/src/start.js";var hash="a48a4422c25f94998c591628f6fff81a52922f3b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/fanyuan/KTH-ICT-TCOMM/Thesis/Analysis/BTS-ETH-atomic_swaps/src/start.js",statementMap:{"0":{start:{line:1,column:18},end:{line:1,column:40}},"1":{start:{line:2,column:18},end:{line:2,column:40}},"2":{start:{line:3,column:15},end:{line:3,column:41}},"3":{start:{line:4,column:12},end:{line:4,column:28}},"4":{start:{line:5,column:12},end:{line:5,column:28}},"5":{start:{line:10,column:2},end:{line:10,column:19}},"6":{start:{line:11,column:2},end:{line:11,column:45}},"7":{start:{line:12,column:2},end:{line:12,column:49}},"8":{start:{line:13,column:2},end:{line:13,column:45}},"9":{start:{line:14,column:2},end:{line:14,column:45}},"10":{start:{line:15,column:2},end:{line:15,column:44}},"11":{start:{line:20,column:15},end:{line:20,column:33}},"12":{start:{line:21,column:2},end:{line:64,column:3}},"13":{start:{line:23,column:6},end:{line:23,column:23}},"14":{start:{line:24,column:6},end:{line:24,column:11}},"15":{start:{line:26,column:6},end:{line:26,column:23}},"16":{start:{line:27,column:6},end:{line:27,column:11}},"17":{start:{line:29,column:21},end:{line:29,column:114}},"18":{start:{line:30,column:20},end:{line:30,column:75}},"19":{start:{line:31,column:22},end:{line:31,column:83}},"20":{start:{line:32,column:22},end:{line:32,column:62}},"21":{start:{line:33,column:6},end:{line:33,column:64}},"22":{start:{line:34,column:6},end:{line:46,column:10}},"23":{start:{line:36,column:29},end:{line:36,column:74}},"24":{start:{line:37,column:10},end:{line:37,column:56}},"25":{start:{line:38,column:25},end:{line:38,column:79}},"26":{start:{line:39,column:10},end:{line:39,column:30}},"27":{start:{line:42,column:10},end:{line:42,column:27}},"28":{start:{line:43,column:26},end:{line:43,column:73}},"29":{start:{line:44,column:10},end:{line:44,column:42}},"30":{start:{line:45,column:10},end:{line:45,column:71}},"31":{start:{line:47,column:6},end:{line:47,column:11}},"32":{start:{line:49,column:21},end:{line:49,column:114}},"33":{start:{line:50,column:20},end:{line:50,column:75}},"34":{start:{line:51,column:25},end:{line:51,column:74}},"35":{start:{line:52,column:20},end:{line:52,column:60}},"36":{start:{line:53,column:19},end:{line:53,column:56}},"37":{start:{line:54,column:6},end:{line:54,column:44}},"38":{start:{line:55,column:6},end:{line:55,column:113}},"39":{start:{line:56,column:6},end:{line:56,column:11}},"40":{start:{line:58,column:22},end:{line:58,column:67}},"41":{start:{line:59,column:20},end:{line:59,column:74}},"42":{start:{line:60,column:22},end:{line:60,column:95}},"43":{start:{line:61,column:19},end:{line:61,column:70}},"44":{start:{line:62,column:6},end:{line:62,column:26}},"45":{start:{line:63,column:6},end:{line:63,column:11}},"46":{start:{line:65,column:2},end:{line:65,column:16}},"47":{start:{line:68,column:0},end:{line:71,column:2}},"48":{start:{line:69,column:2},end:{line:69,column:19}},"49":{start:{line:70,column:2},end:{line:70,column:17}},"50":{start:{line:74,column:2},end:{line:74,column:57}},"51":{start:{line:74,column:32},end:{line:74,column:55}}},fnMap:{"0":{name:"main",decl:{start:{line:8,column:15},end:{line:8,column:19}},loc:{start:{line:8,column:22},end:{line:66,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:35,column:14},end:{line:35,column:15}},loc:{start:{line:35,column:37},end:{line:40,column:9}},line:35},"2":{name:"(anonymous_2)",decl:{start:{line:41,column:15},end:{line:41,column:16}},loc:{start:{line:41,column:35},end:{line:46,column:9}},line:41},"3":{name:"(anonymous_3)",decl:{start:{line:68,column:13},end:{line:68,column:14}},loc:{start:{line:68,column:20},end:{line:71,column:1}},line:68},"4":{name:"sleep",decl:{start:{line:73,column:9},end:{line:73,column:14}},loc:{start:{line:73,column:19},end:{line:75,column:1}},line:73},"5":{name:"(anonymous_5)",decl:{start:{line:74,column:21},end:{line:74,column:22}},loc:{start:{line:74,column:32},end:{line:74,column:55}},line:74}},branchMap:{"0":{loc:{start:{line:21,column:2},end:{line:64,column:3}},type:"switch",locations:[{start:{line:22,column:4},end:{line:24,column:11}},{start:{line:25,column:4},end:{line:27,column:11}},{start:{line:28,column:4},end:{line:47,column:11}},{start:{line:48,column:4},end:{line:56,column:11}},{start:{line:57,column:4},end:{line:63,column:11}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0,0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a48a4422c25f94998c591628f6fff81a52922f3b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const btsForEth=(cov_10395tdp4a.s[0]++,require('./btsForEth'));const ethForBts=(cov_10395tdp4a.s[1]++,require('./ethForBts'));const prompt=(cov_10395tdp4a.s[2]++,require('./helper/prompt'));const eth=(cov_10395tdp4a.s[3]++,require('./eth'));const bts=(cov_10395tdp4a.s[4]++,require('./bts'));async function main(){cov_10395tdp4a.f[0]++;cov_10395tdp4a.s[5]++;await sleep(2000);cov_10395tdp4a.s[6]++;console.log('Enter 1 to send BTS get ETH');cov_10395tdp4a.s[7]++;console.log('      2 to receive BTS from ETH');cov_10395tdp4a.s[8]++;console.log('      3 to resolve BTS HTLC');cov_10395tdp4a.s[9]++;console.log('      4 to resolve ETH HTLC');cov_10395tdp4a.s[10]++;console.log('      5 to extend BTS HTLC');/* 
   * we don't have refund function in bitshares htlc contract,
   * the locked amount will return to depositor automatically when the timelock expires
   */let answer=(cov_10395tdp4a.s[11]++,await prompt('> '));cov_10395tdp4a.s[12]++;switch(answer){case'1':cov_10395tdp4a.b[0][0]++;cov_10395tdp4a.s[13]++;await btsForEth();cov_10395tdp4a.s[14]++;break;case'2':cov_10395tdp4a.b[0][1]++;cov_10395tdp4a.s[15]++;await ethForBts();cov_10395tdp4a.s[16]++;break;case'3':cov_10395tdp4a.b[0][2]++;let Mnemonic=(cov_10395tdp4a.s[17]++,await prompt('Enter the secret mnemonics (12 words) to get access to your metamask wallet: '));let Api_key=(cov_10395tdp4a.s[18]++,await prompt('Also specify your environment api_key: '));let ethHtlcId=(cov_10395tdp4a.s[19]++,await prompt('Enter the HTLC id you want to keep track on: '));let btsHtlcId=(cov_10395tdp4a.s[20]++,await prompt('Enter your BTS HTLC id: '));cov_10395tdp4a.s[21]++;console.log('Waiting for ETH contract to be resolved...');cov_10395tdp4a.s[22]++;await eth.waitForHTLC(Mnemonic,Api_key,ethHtlcId).then(async function(secret){cov_10395tdp4a.f[1]++;let btsRecipient=(cov_10395tdp4a.s[23]++,await prompt('Enter your BTS account name: '));cov_10395tdp4a.s[24]++;console.log("Resolving BTS HTLC contract...");const output=(cov_10395tdp4a.s[25]++,await bts.resolveHTLC(btsHtlcId,btsRecipient,secret));cov_10395tdp4a.s[26]++;console.log(output);}).catch(async function(err){cov_10395tdp4a.f[2]++;cov_10395tdp4a.s[27]++;console.log(err);let ethSender=(cov_10395tdp4a.s[28]++,await prompt('Enter your ETH sender address: '));cov_10395tdp4a.s[29]++;console.log('Refunding ETH...');cov_10395tdp4a.s[30]++;await eth.refundHTLC(mnemonic,api_key,ethSender,ethHtlcId);});cov_10395tdp4a.s[31]++;break;case'4':cov_10395tdp4a.b[0][3]++;let mnemonic=(cov_10395tdp4a.s[32]++,await prompt('Enter the secret mnemonics (12 words) to get access to your metamask wallet: '));let api_key=(cov_10395tdp4a.s[33]++,await prompt('Also specify your environment api_key: '));let ethRecipient=(cov_10395tdp4a.s[34]++,await prompt('Enter your ETH receiver address: '));let ethHtlc=(cov_10395tdp4a.s[35]++,await prompt('Enter your ETH HTLC id: '));let secret=(cov_10395tdp4a.s[36]++,await prompt('Enter your preimage: '));cov_10395tdp4a.s[37]++;console.log("Resolving ETH HTLC... ");cov_10395tdp4a.s[38]++;await eth.resolveHTLC(mnemonic,api_key,ethRecipient,ethHtlc,'0x'+Buffer.from(secret).toString('hex'));cov_10395tdp4a.s[39]++;break;case'5':cov_10395tdp4a.b[0][4]++;let btsSender=(cov_10395tdp4a.s[40]++,await prompt('Enter your BTS account name: '));let btsHtlc=(cov_10395tdp4a.s[41]++,await prompt('Enter BTS HTLC_id you want to extend: '));let Extratime=(cov_10395tdp4a.s[42]++,await prompt('Enter the extra time you need for contract (in seconds): '));let output=(cov_10395tdp4a.s[43]++,await bts.extendHTLC(btsSender,btsHtlc,Extratime));cov_10395tdp4a.s[44]++;console.log(output);cov_10395tdp4a.s[45]++;break;}cov_10395tdp4a.s[46]++;process.exit();}cov_10395tdp4a.s[47]++;main().catch(err=>{cov_10395tdp4a.f[3]++;cov_10395tdp4a.s[48]++;console.log(err);cov_10395tdp4a.s[49]++;process.exit(1);});function sleep(ms){cov_10395tdp4a.f[4]++;cov_10395tdp4a.s[50]++;return new Promise(resolve=>{cov_10395tdp4a.f[5]++;cov_10395tdp4a.s[51]++;return setTimeout(resolve,ms);});}